name: Build and deploy an app to AKS

on:
  push:
    branches: ["main"]
  workflow_dispatch:

env:
  AZURE_CONTAINER_REGISTRY: "your-azure-container-registry"
  CONTAINER_NAME: "painel"
  RESOURCE_GROUP: "rg_softdesign"
  CLUSTER_NAME: "aks1_celsinho_softdesign"
  DEPLOYMENT_MANIFEST_PATH: "/k8s/deployment.yaml"

jobs:
  buildImage:
    permissions:
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    steps:
      # Checks out the repository this file is in
      - uses: actions/checkout@v3

      # Logs in with your Azure credentials
      - name: Azure login
        uses: azure/login@v1.4.6
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # Builds and pushes an image up to your Azure Container Registry
      - name: Build and push image to ACR
        run: |
          az acr build --image ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.CONTAINER_NAME }}:${{ github.sha }} --registry ${{ env.AZURE_CONTAINER_REGISTRY }} -g ${{ env.RESOURCE_GROUP }} .

  deploy:
    permissions:
      actions: read
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    needs: [buildImage]
    steps:
      # Checks out the repository this file is in
      - uses: actions/checkout@v3

      # Logs in with your Azure credentials
      - name: Azure login
      steps:
        - name: Sample Azure action
            with: # Set Azure credentials secret as an input
            credentials: ${{ secrets.AZURE_CREDENTIALS }}
            env: # Or as an environment variable
            credentials: ${{ secrets.AZURE_CREDENTIALS }}

    
        #runs-on: ubuntu-latest
      - uses: actions/checkout@v3      
      - name: autenticação no Dockerhub
        uses: docker/login-actions@v2.1.0
        with:
            username: ${{ secrets.DOCKER-USER }}
            password: ${{ secrets.DOCKER_PWD }}
      
      - name: Construção da imagem Dcoker
        uses: docker/build-push-action@v3.2.0
        with:
          context: ./k8s
          file: ./Dockerfile
          push: true
          tags: 
            celsinhobueno/softdesign:${{ github.run.number }}
            celsinhobueno/softdesign:latest
              
        # Use kubelogin to configure your kubeconfig for Azure auth
      - name: Set up kubelogin for non-interactive login
        uses: azure/use-kubelogin@v1
        with:
          continue-on-error: 'v0.0.25'

        # Retrieves your Azure Kubernetes Service cluster's kubeconfig file
      - name: Get K8s context
        uses: azure/aks-set-context@v3
        with:
          resource-group: ${{ env.RESOURCE_GROUP }}
          cluster-name: ${{ env.CLUSTER_NAME }}
          admin: 'false'
          use-kubelogin: 'true'

      # Deploys application based on given manifest file
      - name: Deploys application
        uses: Azure/k8s-deploy@v4
        with:
            action: deploy
            manifests: ${{ env.DEPLOYMENT_MANIFEST_PATH }}
            images: |
              ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.CONTAINER_NAME }}:${{ github.sha }}
